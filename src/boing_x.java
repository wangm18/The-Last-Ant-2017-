import java.applet.AudioClip;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.SourceDataLine;
/** <p>An object implementing {@link AudioClip java.applet.AudioClip} with the data from boing_x.wav hard-coded into it.</p>
 * <p>Created with the <a href="http://stephengware.com/projects/soundtoclass">SoundToClass tool</a>, by Stephen G. Ware.</p>
 * @author Stephen G. Ware */
public class boing_x implements AudioClip {
	private byte[] data;
	private AudioFormat format;
	private DataLine.Info lineInfo = null;
	private PlayThread playThread = null;
	private LoopThread loopThread = null;
	private static final long serialVersionUID = 7696;
	private static byte[] data0(){ return new byte[] {-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-125,-120,-112,-94,-67,113,63,56,58,56,88,122,-120,-86,-77,-81,-85,-86,-117,120,112,94,69,71,80,74,82,114,127,-119,-93,-81,-89,-89,-89,-114,119,111,98,76,78,87,89,104,-126,-117,-109,-90,-82,-90,-98,-102,-123,114,106,96,83,84,101,103,114,-125,-112,-112,-107,-109,117,88,70,111,-50,-44,-34,-45,-99,124,82,59,36,51,54,70,116,-107,-92,-75,-45,-50,-68,-75,-100,123,95,87,60,52,72,87,101,127,-90,-82,-67,-55,-68,-88,-105,-123,94,79,72,64,64,82,102,116,-109,-90,-80,-78,-73,-85,-107,-125,114,92,75,74,72,77,96,116,-124,-107,-88,-85,-86,-89,-104,-125,117,103,85,77,84,88,99,116,-122,-109,-93,-82,-76,-76,-68,-83,83,40,38,25,43,82,115,-117,-77,-66,-64,-61,-65,-102,-119,122,93,66,69,68,65,82,110,120,-116,-88,-78,-80,-75,-80,-101,-127,122,93,74,75,77,79,92,123,-123,-106,-88,-78,-85,-89,-93,-117,124,111,97,79,79,90,94,111,-128,-117,-114,-101,-106,122,97,81,-107,-54,-50,-53,-63,-128,108,74,45,46,60,63,81,-119,-96,-84,-66,-45,-59,-76,-82,-119,107,92,81,55,55,84,92,113,-111,-85,-79,-66,-55,-75,-100,-112,121,91,78,73,62,70,92,111,126,-104,-83,-81,-76,-76,-93,-115,127,105,81,75,76,75,85,106,125,-117,-96,-86,-86,-87,-92,-112,123,111,95,81,80,85,92,105,126,-114,-103,-89,-79,-83,-84,-78,-92,91,43,32,27,40,81,113,-119,-81,-60,-62,-57,-55,-98,-117,118,97,61,59,61,57,77,105,125,-117,-84,-70,-76,-73,-79,-100,125,116,88,69,69,75,76,91,123,-117,-101,-82,-74,-79,-87,-94,-121,116,103,91,76,77,89,95,112,-126,-115,-108,-98,-103,122,94,102,-81,-58,-58,-62,-85,114,93,69,42,53,73,77,99,-111,-92,-84,-64,-58,-77,-89,-97,126,94,89,79,63,71,94,105,124,-98,-83,-80,-69,-66,-93,-111,-125,107,83,79,76,69,82,107,121,-121,-95,-82,-84,-82,-88,-110,-128,117,95,77,79,83,85,99,121,-120,-110,-91,-87,-94,-97,-105,-125,115,105,91,84,87,93,102,113,-121,-111,-99,-89,-86,-89,-94,-90,-102,113,52,32,31,37,78,109,-113,-82,-57,-57,-54,-57,-96,-119,115,95,61,58,60,60,80,104,-128,-114,-82,-68,-73,-73,-80,-100,125,113,87,67,65,72,80,95,126,-113,-96,-82,-71,-77,-87,-94,-122,117,99,89,76,75,86,95,109,-126,-113,-106,-99,-104,-126,100,109,-80,-69,-65,-76,-100,117,89,74,51,63,80,90,114,-104,-90,-84,-69,-67,-88,-101,-110,118,92,87,80,72,81,104,115,-124,-96,-85,-84,-76,-79,-102,-120,122,100,83,81,78,78,95,117,-126,-112,-94,-87,-90,-91,-96,-121,123,107,95,80,83,90,94,112,-128,-115,-107,-93,-91,-100,-104,-116,125,109,103,90,87,94,103,112,123,-115,-109,-99,-93,-95,-99,-104,-106,-109,121,67,42,38,43,79,106,-113,-84,-58,-55,-55,-60,-93,-118,112,93,63,59,62,65,82,105,-125,-110,-81,-69,-72,-75,-82,-104,-128,108,89,68,67,73,82,96,124,-112,-95,-80,-74,-78,-87,-98,-119,115,98,87,77,76,88,98,115,-124,-109,-103,-98,-104,-126,105,112,-86,-74,-72,-83,-106,115,91,76,58,70,87,98,120,-101,-89,-85,-72,-73,-94,-104,-116,115,91,88,82,78,88,108,120,-124,-94,-86,-86,-82,-86,-104,-127,123,97,84,82,84,85,97,120,-127,-109,-95,-89,-92,-95,-101,-125,118,105,93,81,85,94,99,118,-125,-112,-106,-94,-94,-106,-109,-122,123,106,100,91,90,97,106,117,-128,-113,-107,-100,-95,-100,-106,-110,-114,-114,-125,79,55,46,49,75,99,-125,-95,-70,-61,-59,-64,-83,-113,119,97,77,63,65,68,78,101,124,-113,-93,-74,-73,-77,-85,-101,-126,111,92,75,67,74,83,96,119,-115,-99,-86,-77,-79,-88,-99,-116,119,102,90,82,80,89,99,114,-126,-112,-103,-101,-104,-124,110,112,-93,-75,-75,-85,-106,116,92,78,61,64,86,96,121,-108,-87,-83,-74,-71,-94,-106,-119,120,90,88,82,77,89,106,123,-121,-95,-84,-84,-83,-88,-106,-128,120,95,83,82,85,86,99,123,-124,-108,-93,-87,-91,-96,-105,-126,117,103,90,82,86,95,101,120,-122,-109,-103,-94,-94,-107,-112,-125,120,104,98,92,91,97,107,115,-128,-114,-105,-100,-96,-99,-108,-115,-119,-121,-119,104,68,54,56,68,94,126,-104,-77,-63,-63,-69,-81,-108,123,103,84,66,66,72,81,98,123,-115,-98,-82,-72,-78,-86,-99,-120,113,97,81,72,74,84,97,117,-118,-102,-90,-80,-80,-89,-101,-115,122,107,92,85,80,84,98,108,127,-117,-105,-102,-107,-117,113,107,-101,-79,-76,-82,-102,123,95,81,65,65,87,95,119,-114,-89,-87,-76,-72,-89,-102,-117,124,95,90,84,80}; }
	private static byte[] data1(){ return new byte[] {87,104,120,-124,-98,-87,-85,-84,-88,-103,-125,123,98,86,83,86,87,97,120,-127,-111,-96,-89,-92,-95,-102,-120,120,107,94,86,87,93,100,114,-125,-114,-105,-96,-95,-102,-110,-120,123,110,101,95,90,96,104,113,125,-115,-107,-101,-97,-100,-107,-114,-121,-125,-124,117,83,63,61,66,86,115,-113,-89,-70,-65,-70,-80,-97,-127,109,90,75,67,70,78,91,113,-122,-105,-90,-79,-79,-84,-96,-110,119,106,89,78,73,80,95,106,-126,-111,-95,-87,-82,-85,-99,-109,-128,113,98,90,83,85,95,106,120,-124,-110,-106,-107,-114,119,109,-108,-80,-74,-80,-96,-122,102,86,68,62,80,89,111,-124,-94,-87,-76,-71,-83,-96,-111,-124,102,91,85,78,81,96,113,127,-109,-90,-85,-82,-82,-96,-114,-128,109,92,84,84,82,92,109,125,-118,-102,-92,-89,-91,-97,-113,125,112,98,87,84,89,93,108,125,-118,-109,-97,-93,-97,-104,-114,-128,113,104,95,90,92,99,107,120,-121,-110,-103,-97,-99,-104,-111,-118,-125,-127,127,97,71,64,64,75,98,-124,-107,-79,-69,-69,-75,-89,-110,118,104,83,72,72,77,87,99,127,-117,-97,-86,-80,-85,-93,-103,127,112,96,85,76,77,91,100,122,-120,-103,-95,-85,-85,-95,-105,-120,122,104,97,86,84,94,102,115,125,-116,-110,-109,-112,123,111,-117,-83,-75,-80,-91,-114,112,91,75,65,75,87,102,126,-103,-91,-83,-72,-78,-94,-106,-121,112,94,87,80,79,92,108,122,-114,-95,-88,-86,-83,-92,-110,-125,115,96,86,85,83,88,105,120,-123,-106,-95,-92,-92,-95,-109,-126,117,104,89,85,89,93,105,122,-121,-112,-102,-95,-98,-102,-111,-124,120,108,100,92,92,100,105,118,-125,-113,-105,-100,-98,-102,-108,-116,-123,-128,-121,115,85,64,63,65,85,121,-116,-87,-70,-67,-69,-79,-96,126,113,92,77,68,73,81,90,117,-123,-104,-90,-76,-78,-89,-95,-117,122,101,90,75,74,85,93,112,-128,-106,-98,-86,-82,-90,-98,-109,-126,113,100,91,84,87,96,106,118,-123,-111,-108,-107,-116,124,127,-95,-83,-89,-97,-115,115,93,83,70,78,92,106,124,-105,-92,-85,-78,-80,-96,-109,-123,113,96,90,85,84,95,113,125,-116,-97,-90,-89,-88,-96,-114,-128,116,99,88,89,89,93,109,125,-122,-106,-97,-93,-95,-100,-110,126,117,103,93,87,91,98,106,124,-121,-111,-104,-99,-100,-108,-114,-128,118,106,101,94,95,103,109,124,-123,-110,-104,-101,-101,-108,-114,-121,-127,127,-122,-122,101,69,62,63,72,107,-125,-98,-73,-64,-65,-71,-83,-123,117,94,79,65,68,76,85,110,-124,-108,-92,-78,-74,-83,-92,-108,122,105,91,78,71,81,93,106,126,-108,-95,-87,-80,-86,-96,-110,-126,110,95,89,82,85,97,109,123,-118,-106,-100,-100,-108,-124,124,-112,-99,-104,-111,-122,113,97,92,85,91,108,121,-122,-103,-91,-91,-93,-97,-111,-126,121,110,98,95,97,101,112,124,-119,-110,-99,-95,-102,-106,-113,-124,114,109,98,93,98,105,114,122,-118,-112,-109,-103,-106,-113,-121,-128,113,106,101,100,98,106,118,125,-119,-111,-107,-107,-109,-115,-128,122,114,108,103,105,108,112,124,-127,-119,-114,-110,-111,-114,-118,-127,125,120,121,127,-119,-99,-124,93,74,66,66,91,121,-112,-86,-70,-72,-77,-87,-113,117,100,86,71,72,83,91,108,-124,-108,-97,-84,-80,-91,-103,-116,118,100,91,83,78,88,104,117,-122,-102,-93,-88,-86,-95,-110,-123,118,102,91,91,93,97,111,125,-118,-107,-98,-98,-106,-114,126,114,121,-120,-121,-124,-127,124,113,112,114,114,125,-127,-119,-115,-108,-111,-118,-118,-127,122,119,119,113,113,119,122,126,-125,-118,-118,-115,-115,-122,-126,-128,125,116,116,116,114,120,125,-128,-127,-119,-119,-123,-123,-125,127,122,121,118,113,117,119,120,125,-127,-123,-122,-120,-123,-126,127,125,120,118,118,119,120,122,127,-128,-127,-123,-125,-126,-126,-128,125,124,124,124,127,-125,-116,-106,-92,-100,111,79,65,58,70,102,-126,-96,-73,-68,-72,-80,-104,123,103,85,72,69,77,90,109,-123,-104,-93,-83,-81,-94,-109,-124,111,92,81,80,81,96,116,-124,-108,-92,-85,-89,-95,-103,-126,116,102,93,87,93,105,114,-124,-111,-99,-96,-95,-103,-118,-128,114,107,107,112,117,120,-128,-122,-118,-115,-110,-113,-117,-120,127,122,118,115,114,117,122,127,-122,-117,-113,-116,-118,-122,127,122,118,115,114,117,120,125,-125,-120,-117,-117,-119,-125,127,122,118,114,114,115,118,122,-128,-122,-119,-117,-119,-125,127,122,118,114,112,115,119,125,-127,-122,-119,-118,-119,-123,-127,125,120,117,117,117,120,124,-128,-125,-122,-118,-119,-122,-125,-128,-128,-128,-125,-116,-97,-86,-128,81,58,45,54,87,-127,-91,-60,-51,-58,-76,-110,109,82,60,50,58,79,105,-126,-93,-78,-68,-71,-93,-113,116,94,73,69,75,85,116,-121,-97,-84,-76,-83,-100,-115,114,98,86,82,89,102,127,-115,-96,-87,-87,-95}; }
	private static byte[] data2(){ return new byte[] {-112,-126,110,100,92,95,111,124,-118,-117,-115,-111,-109,-110,-115,-122,124,116,108,107,112,115,126,-121,-112,-110,-108,-112,-124,127,115,108,104,108,112,121,-125,-117,-112,-111,-116,-122,125,118,112,110,111,115,123,-127,-121,-116,-116,-120,-124,125,119,114,114,114,119,125,-127,-122,-120,-120,-124,-127,125,120,118,118,120,123,-128,-122,-120,-118,-121,-125,126,120,118,117,118,122,-128,-122,-117,-116,-118,-122,-125,-126,-126,-124,-110,-85,-98,92,63,42,43,80,122,-80,-51,-37,-54,-89,-120,75,49,39,43,79,114,-95,-73,-54,-59,-93,-119,97,72,58,63,85,112,-104,-86,-71,-71,-93,-117,109,91,75,78,100,117,-109,-91,-80,-84,-98,-116,113,97,84,84,101,118,-114,-98,-87,-88,-101,-115,118,103,91,87,96,114,-120,-101,-89,-86,-99,-118,117,99,88,90,105,124,-113,-97,-92,-97,-113,125,105,91,89,97,115,-123,-107,-97,-100,-110,-127,113,101,96,101,112,127,-114,-105,-104,-111,-125,117,106,101,104,115,-128,-116,-109,-110,-116,-128,117,107,105,109,119,-124,-114,-109,-110,-115,-128,119,111,107,113,119,-124,-118,-111,-111,-120,-128,116,111,111,116,-126,-119,-110,-106,-106,-109,-103,-102,103,66,47,49,88,-122,-59,-39,-41,-70,120,79,38,37,56,97,-97,-64,-42,-56,-104,113,64,46,53,78,-126,-93,-62,-60,-88,-118,93,72,64,77,117,-112,-79,-69,-79,-102,122,93,79,82,102,-124,-100,-84,-85,-101,-127,106,92,92,105,126,-108,-94,-99,-110,-123,118,106,101,109,122,-119,-106,-102,-107,-120,121,109,103,109,120,-123,-110,-105,-110,-123,121,109,103,107,117,-124,-115,-110,-115,-124,122,113,111,115,122,-125,-120,-119,-124,125,119,115,115,119,127,-123,-119,-120,-127,124,118,115,116,121,127,-125,-121,-122,-127,127,122,121,122,125,-128,-126,-126,-126,127,125,124,124,127,127,-126,-126,-128,-128,127,127,127,-128,-126,-123,-123,-121,-116,-108,-122,100,77,78,105,-121,-72,-64,-88,-115,93,66,63,85,-127,-102,-75,-78,-106,114,86,75,85,113,-112,-90,-92,-108,123,99,89,93,116,-118,-102,-97,-107,-128,109,99,103,116,-122,-108,-103,-110,-124,117,109,108,118,-126,-117,-112,-116,-125,122,115,116,122,-126,-119,-111,-108,-120,123,114,111,116,-126,-115,-110,-114,-124,124,116,116,124,-123,-117,-117,-120,-126,120,115,116,123,-127,-122,-117,-120,127,123,119,118,123,127,-125,-123,-127,125,122,122,123,125,-127,-126,-128,127,123,122,122,124,127,-128,-128,127,124,124,124,124,127,-128,-128,-128,127,124,124,124,125,127,-128,-128,127,127,124,124,124,127,-128,-128,-128,-128,127,127,127,-128,-127,-125,-122,-118,-117,123,100,97,112,-126,-107,-90,-104,124,99,93,103,118,-118,-104,-109,-125,114,106,112,122,-125,-119,-121,-128,118,115,121,127,-125,-123,-127,123,119,119,124,-125,-121,-122,-126,123,119,120,125,-125,-120,-122,-126,124,121,120,124,-127,-125,-125,-128,123,119,118,121,-120,-103,-104,-120,114,108,106,116,-113,-100,-105,-120,116,112,116,126,-112,-108,-116,127,114,112,122,-126,-116,-112,-121,126,116,116,124,-126,-119,-120,-127,123,118,119,126,-125,-123,-125,125,122,120,121,127,-126,-126,-128,124,122,122,124,127,-128,-128,127,124,122,124,127,-128,-128,127,125,124,124,125,127,-128,127,125,123,122,124,127,-127,-126,-127,127,125,124,124,127,-128,-126,-126,-125,-123,-118,-123,113,102,112,127,-116,-104,-108,-128,107,97,109,127,-115,-111,-117,125,111,107,116,-126,-117,-116,-124,123,116,115,122,-126,-120,-122,127,121,120,121,126,-125,-121,-125,127,122,122,125,-127,-123,-123,-127,125,122,122,125,-128,-126,-127,125,122,120,120,122,123,-123,-107,-108,-124,109,106,111,122,-108,-98,-111,-128,110,110,122,-124,-110,-110,-123,122,114,118,-126,-120,-117,-120,124,119,119,124,-121,-118,-122,-128,121,120,123,127,-122,-122,-128,124,122,122,125,-127,-126,-127,125,122,123,125,127,-127,127,125,123,122,124,127,-127,-128,126,123,122,123,125,-128,-128,-128,125,123,123,124,125,-128,-128,-128,127,124,124,125,127,-128,-128,-128,-128,-128,-127,-125,-122,-120,123,108,109,121,-121,-109,-107,-122,114,100,106,123,-118,-110,-113,127,116,108,114,-128,-120,-117,-122,122,117,117,122,-124,-120,-123,127,121,119,122,127,-123,-123,-127,125,123,124,127,-126,-124,-126,126,124,123,125,-128,-126,-128,127,123,122,123,123,125,125,-124,-111,-107,-120,111,104,108,120,-108,-99,-109,-127,111,110,122,-123,-108,-110,-126,118,114,118,-128,-118,-114,-120,124,117,118,126,-123,-120,-122,127,121,120,125,-125,-123,-124,127,122,121,124,-128,-125,-125,127,124,121,124,127,-127,-126,127,125,123,123,126,-128,-126,-128,126,124,123,125,127,-128,-128,127,126,125,125,126,127,-128,127,127,126,125,127,127,-128,-128,-128,127,127,-128,-128,-126,-125,-122,-124,117,108,113,124,-116,-106,-112,-128,107,102,113,125,-114,-109,-121,124}; }
	private static byte[] data3(){ return new byte[] {110,110,121,-126,-115,-117,-128,121,115,117,126,-123,-120,-124,124,120,120,124,-125,-122,-123,-127,124,121,124,127,-124,-124,-127,127,123,123,126,-128,-126,-127,126,124,122,122,123,124,-127,-112,-102,-112,120,100,98,112,-117,-96,-97,-116,118,102,105,123,-113,-103,-112,-127,114,109,119,-123,-113,-113,-123,122,115,116,125,-120,-116,-121,126,119,117,122,-127,-121,-121,-127,123,119,120,126,-126,-122,-126,126,122,121,123,127,-127,-126,127,124,122,123,126,127,-128,-128,126,123,123,124,126,-128,-128,127,126,123,123,125,127,-128,-128,127,126,125,125,127,127,-128,-128,-128,127,127,127,-125,-124,-128,119,114,117,-128,-118,-110,-116,125,115,109,113,127,-120,-114,-118,126,119,113,116,126,-122,-118,-119,126,121,117,120,126,-124,-120,-122,127,124,121,122,125,-125,-123,-123,-127,126,123,123,126,-127,-126,-126,-128,125,123,123,124,126,127,125,122,120,124,-117,-100,-102,-124,106,90,93,119,-107,-90,-90,-113,114,97,97,115,-117,-99,-98,-112,123,107,102,116,-122,-108,-104,-114,126,113,108,116,-127,-116,-110,-117,127,117,111,114,125,-122,-116,-117,-128,121,114,115,123,-126,-119,-119,-126,124,116,115,121,126,-123,-122,-125,126,120,119,122,126,-125,-124,-125,127,123,121,122,124,-128,-125,-125,-127,126,124,123,124,127,-127,-124,-126,-128,126,125,125,127,-127,-126,-126,126,123,123,126,-126,-123,-123,-125,124,122,121,122,126,-126,-124,-124,-128,125,123,123,125,127,-126,-126,-127,127,126,125,125,126,127,-126,-126,-127,127,127,125,125,127,-128,-128,-128,-128,127,127,125,125,125,126,126,125,124,122,120,118,117,123,-118,-95,-91,-108,121,94,80,90,116,-109,-83,-81,-96,-123,105,89,92,107,-121,-103,-91,-97,-119,121,102,99,112,124,-112,-104,-107,-116,124,114,108,111,123,-124,-116,-114,-121,-127,119,115,115,119,127,-125,-120,-121,-125,126,120,118,120,122,127,-126,-124,-124,-127,126,122,120,121,124,127,-127,-124,-126,127,126,123,122,123,125,-128,-126,-126,-126,127,126,124,123,125,127,-128,-126,-127,-128,127,126,124,125,126,-128,-126,-126,-127,127,126,123,123,123,126,-128,-125,-124,-125,-127,126,124,123,123,126,-128,-125,-124,-125,-127,126,124,123,124,126,-128,-126,-126,-127,-128,127,127,125,125,126,127,127,127,-128,-128,127,127,124,122,122,121,120,120,118,118,120,-120,-98,-83,-86,-111,120,85,73,76,94,-121,-96,-71,-67,-87,-111,107,87,73,80,108,-125,-93,-80,-80,-93,-121,114,90,84,92,105,-124,-106,-91,-90,-104,-120,112,98,90,94,110,125,-111,-102,-99,-106,-123,120,103,98,100,107,124,-122,-110,-106,-110,-118,125,113,105,103,108,118,-127,-117,-112,-111,-117,-126,119,111,109,110,116,125,-124,-117,-115,-117,-124,126,120,115,115,117,121,126,-124,-122,-123,127,126,-125,-122,-122,-124,127,122,117,115,117,121,126,-124,-118,-117,-118,-123,-128,121,117,116,117,121,127,-124,-121,-119,-122,-125,127,124,121,120,122,122,126,-127,-124,-123,-123,-124,-128,127,123,122,122,124,124,125,127,126,125,124,119,117,115,115,-126,-105,-86,-83,-94,-111,112,93,77,77,95,114,-112,-92,-77,-77,-89,-106,121,103,88,86,92,105,-127,-112,-93,-88,-92,-100,-120,120,101,94,90,97,114,127,-115,-101,-98,-100,-110,-124,117,104,97,96,103,115,-128,-115,-106,-103,-106,-115,-128,117,107,101,101,108,117,-128,-118,-110,-108,-110,-118,-127,120,111,106,106,112,120,-128,-119,-114,-110,-113,-118,-126,122,116,112,112,116,120,126,-125,-120,-119,-122,-126,-127,-125,-124,-126,-128,125,121,119,118,119,124,126,-124,-122,-119,-119,-122,-124,127,124,121,120,120,122,124,127,-126,-124,-123,-123,-124,-125,127,126,123,121,120,121,124,126,-127,-125,-124,-123,-124,-126,127,124,120,117,116,115,116,117,119,123,-125,-110,-90,-87,-92,-104,126,109,88,81,84,94,116,-124,-101,-90,-84,-86,-96,-112,127,109,97,90,92,100,114,-126,-111,-99,-93,-93,-100,-112,-127,115,102,95,95,99,110,124,-119,-107,-101,-99,-104,-114,-126,118,106,100,100,103,110,121,-125,-114,-108,-106,-108,-114,-124,123,113,106,102,104,110,119,-128,-120,-113,-109,-110,-113,-121,126,118,111,107,107,109,116,122,-125,-118,-112,-111,-112,-117,-125,126,118,116,113,113,114,116,122,126,-122,-117,-114,-112,-116,-120,-127,124,117,112,112,113,118,122,-126,-122,-117,-115,-116,-118,-124,-128,121,118,116,115,116,120,124,127,-122,-121,-118,-118,-121,-124,126,123,120,117,117,118,121,123,126,-127,-126,-126,127,124,124,-126,-116,-109,-108,-113,-123,122,112,104,102,105,112,122,-124,-113,-108,-105,-107,-112,-120,127,119,112,108,108,111,117,125,-123,-116,-111,-110,-111,-116,-122,127,119,113,109,110,113,118,125,-124,-117,-113,-111,-114,-119,-126,125,119,115,112,112,115,120,125,-124,-119,-115,-115,-116,-120,-127,125,120,116,114,115,118,121,127,-125}; }
	private static byte[] data4(){ return new byte[] {-119,-117,-116,-118,-122,-125,124,121,117,116,118,120,125,-127,-122,-119,-116,-115,-116,-117,-126,121,109,105,101,104,115,123,-120,-112,-105,-102,-106,-112,-125,125,112,107,103,104,109,115,127,-122,-113,-108,-107,-109,-116,-124,124,117,111,108,108,112,117,126,-124,-116,-112,-110,-112,-117,-124,127,120,115,112,111,114,119,125,-126,-122,-118,-118,-119,-119,-117,-118,-122,127,122,115,111,110,113,118,126,-124,-117,-113,-111,-114,-119,-125,125,118,114,113,113,117,122,127,-123,-119,-115,-115,-118,-123,-128,125,118,115,114,115,118,123,-128,-123,-118,-117,-118,-121,-126,127,120,118,114,116,118,122,-128,-126,-121,-120,-119,-121,-126,-128,123,120,118,118,119,122,127,-128,-124,-122,-122,-122,-124,-128,127,123,121,119,121,122,125,-128,-124,-122,-120,-120,-121,-122,-123,-122,-125,124,110,103,99,100,110,122,-121,-109,-102,-99,-102,-112,-123,120,109,100,98,100,107,117,-126,-116,-109,-104,-106,-111,-120,126,115,107,104,103,109,116,126,-120,-112,-107,-107,-110,-117,-126,122,115,110,109,111,116,124,-124,-118,-113,-111,-113,-118,-124,-128,125,121,118,117,118,121,126,-126,-120,-117,-114,-115,-118,-123,127,122,117,116,117,119,126,-127,-121,-117,-116,-117,-121,-125,125,120,117,115,117,119,126,-128,-121,-119,-117,-119,-123,-128,123,120,117,117,118,120,127,-128,-123,-121,-120,-122,-124,-128,123,121,118,118,121,122,-128,-126,-122,-121,-121,-122,-126,-128,123,122,120,120,123,125,-128,-126,-123,-122,-123,-124,-128,127,124,123,123,126,-128,-124,-120,-115,-113,-122,120,107,100,97,104,117,-126,-112,-103,-99,-103,-111,-125,119,107,99,99,104,113,125,-121,-112,-107,-106,-111,-121,125,115,107,105,106,112,122,-125,-116,-109,-108,-111,-118,-126,122,114,110,111,115,123,-128,-118,-114,-112,-113,-118,-124,125,121,117,117,117,118,123,-128,-121,-115,-111,-111,-116,-122,124,118,112,111,114,120,-127,-121,-114,-112,-114,-118,-127,123,116,113,113,116,123,-128,-120,-115,-114,-117,-124,127,120,116,114,115,121,126,-124,-120,-118,-118,-122,-127,123,119,115,115,119,123,-127,-122,-119,-118,-121,-126,126,121,118,117,118,123,127,-124,-120,-119,-121,-125,127,124,120,119,119,122,126,-126,-123,-120,-122,-123,-128,125,123,123,124,127,-124,-117,-112,-114,126,112,104,100,103,116,-125,-111,-102,-100,-106,-116,123,111,101,98,103,114,127,-116,-107,-106,-110,-119,-128,114,108,104,105,116,125,-120,-113,-109,-111,-119,-126,119,113,110,110,119,126,-121,-115,-112,-113,-120,-126,121,117,115,117,123,-128,-122,-121,-122,-123,-125,-126,-128,-128,125,125,125,125,-128,-128,-125,-124,-125,-126,-128,127,125,124,125,126,-128,-128,-125,-125,-127,-128,126,125,123,123,124,126,-128,-128,-127,-127,-128,-128,125,125,123,125,125,-128,-128,-128,-128,-128,127,126,125,125,125,127,-128,-128,-128,-128,-128,127,126,126,126,-128,-128,-128,-127,-127,-128,-128,127,126,126,126,127,-128,-128,-127,-127,-127,-128,-128,127,126,127,-128,-128,-126,-124,-122,-120,-119,-127,118,112,108,109,120,-126,-112,-106,-106,-112,-126,119,105,101,106,113,-126,-116,-108,-107,-115,-124,118,110,105,107,117,126,-118,-112,-111,-114,-126,123,113,111,113,118,-127,-120,-114,-113,-119,-124,123,117,115,115,122,-128,-122,-118,-118,-121,-126,127,126,126,125,125,126,127,-128,-125,-124,-123,-124,-126,-128,125,124,124,125,-128,-126,-124,-124,-124,-126,-128,125,125,125,126,-128,-127,-126,-125,-126,-128,127,125,125,126,127,-128,-127,-127,-128,-128,126,125,125,125,127,-128,-127,-127,-127,-128,127,125,124,124,125,127,-128,-127,-127,-127,-128,-128,126,125,125,126,127,-128,-128,-128,-128,-128,-128,126,126,126,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-125,-124,-125,126,121,118,118,122,127,-122,-117,-117,-120,-128,123,115,114,117,122,-126,-120,-116,-117,-123,127,119,116,116,119,126,-126,-120,-117,-121,-126,125,120,117,118,124,127,-123,-120,-120,-123,-128,124,121,120,121,124,-128,-125,-124,-126,127,124,125,-127,-121,-118,-120,-126,123,116,113,116,124,-124,-116,-112,-114,-121,126,118,114,115,122,-127,-119,-114,-114,-119,-127,122,117,115,119,126,-124,-119,-116,-119,-125,125,119,116,118,122,-128,-123,-120,-120,-124,127,123,119,119,122,126,-126,-123,-122,-124,-128,125,120,120,122,124,-128,-125,-123,-124,-126,127,123,121,121,123,127,-128,-124,-124,-125,-128,125,124,123,123,125,-128,-125,-124,-125,-126,-128,126,125,125,126,-128,-126,-125,-125,-128,125,123,123,124,-128,-126,-124,-123,-125,-128,125,123,121,122,125,-128,-125,-123,-124,-125,-128,125,123,123,123,125,-128,-125,-124,-124,-126,-128,125,124,123,124,126,-128,-126,-124,-125,-127,127,125,123,123,124,125,127,-128,-128,-128,-128,-122,-116,-115,-118,-126,120,112,109,112,122,-124,-114,-108,-109,-116,-126,119,112,110,115,124,-123,-113,-110,-111,-119,127,119,113,113,117,123,-122,-117,-113,-115,-122,127,119,114}; }
	private static byte[] data5(){ return new byte[] {114,118,126,-126,-119,-117,-119,-123,126,121,117,117,120,124,-126,-121,-119,-120,-126,127,120,118,118,120,125,-128,-123,-121,-123,-125,127,123,120,119,122,124,-128,-124,-122,-123,-125,-128,124,123,122,123,125,-128,-125,-124,-124,-125,-128,127,124,124,124,125,127,-128,-126,-125,-125,-125,-128,-128,125,124,124,125,126,-128,-126,-125,-125,-126,-128,-128,125,124,124,125,127,-128,-126,-125,-125,-126,-128,127,125,124,124,125,127,-128,-127,-126,-127,-128,127,125,124,124,124,124,125,125,125,126,-127,-122,-114,-112,-115,-122,124,114,108,107,111,124,-123,-111,-106,-108,-112,-125,123,112,109,111,116,127,-121,-111,-109,-111,-117,-128,122,113,111,114,119,-127,-122,-115,-112,-116,-121,126,121,114,114,116,121,-128,-122,-117,-116,-119,-123,126,121,116,115,117,121,-128,-123,-120,-117,-121,-123,126,122,117,117,119,122,-128,-125,-121,-120,-121,-125,-128,123,121,120,120,123,126,-125,-122,-121,-122,-124,-127,126,123,121,121,123,125,-128,-127,-126,-125,-124,-123,-124,-126,-128,126,123,121,121,123,126,-128,-125,-123,-122,-123,-125,-128,124,122,121,121,123,126,-128,-125,-123,-123,-125,-127,127,124,122,122,123,125,-128,-127,-126,-125,-126,-127,127,125,122,121,121,121,123,124,127,-128,-120,-113,-111,-111,-118,-125,119,112,105,106,113,121,-123,-114,-107,-105,-110,-116,-128,121,112,109,111,115,124,-126,-116,-112,-111,-113,-120,-127,121,115,112,112,116,122,-127,-122,-115,-114,-117,-120,-128,123,116,113,113,116,123,-128,-123,-119,-117,-118,-122,-127,124,119,116,116,118,122,127,-125,-120,-119,-120,-122,-126,127,122,119,119,119,123,127,-127,-124,-121,-120,-122,-126,-128,125,123,121,121,123,126,-128,-126,-125,-124,-125,-127,125,124,126,-128,-126,-125,-124,-126,-128,127,124,124,124,124,126,-128,-127,-125,-124,-124,-125,-127,-128,126,125,124,124,125,127,-128,-127,-126,-125,-125,-126,-128,-128,127,125,125,125,125,126,127,-128,-128,-128,-128,126,125,124,122,124,126,-123,-117,-113,-113,-116,-121,125,118,112,110,112,116,124,-126,-117,-114,-111,-112,-117,-122,127,121,115,114,114,117,123,-128,-121,-117,-115,-115,-117,-122,-127,124,119,115,115,116,120,126,-126,-122,-119,-117,-119,-122,-127,126,122,117,117,117,120,124,-128,-125,-122,-120,-121,-123,-126,127,124,121,118,118,120,123,126,-127,-124,-122,-121,-122,-124,-127,127,124,122,121,121,123,125,-128,-126,-123,-122,-122,-123,-125,-128,126,124,122,122,123,124,127,-128,-127,-125,-124,-124,-124,-125,-127,-128,126,125,124,124,124,125,127,-128,-126,-125,-124,-125,-126,-127,-128,126,125,125,125,125,126,127,-128,-127,-126,-126,-126,-127,-128,-128,127,126,126,125,125,125,126,127,127,-128,-128,-128,-125,-122,-119,-119,-121,-123,127,124,119,117,117,118,122,127,-125,-121,-118,-117,-118,-121,-125,127,123,120,118,118,120,123,127,-126,-122,-120,-119,-120,-122,-126,127,123,121,119,119,120,123,127,-127,-124,-122,-120,-122,-124,-127,127,124,121,120,120,121,123,126,-127,-125,-123,-122,-123,-125,-127,127,124,122,121,121,122,123,126,-128,-126,-124,-123,-123,-125,-127,127,125,123,122,122,123,125,127,-127,-125,-123,-123,-123,-125,-127,-128,-128,-128,125,123,120,120,119,120,125,-128,-123,-121,-118,-118,-120,-123,-128,126,121,119,118,118,120,123,-128,-126,-123,-121,-120,-121,-124,-126,126,124,121,120,120,121,124,126,-127,-124,-122,-121,-122,-123,-125,-128,125,123,122,122,123,125,127,-128,-125,-123,-122,-122,-123,-125,-127,126,124,123,122,123,124,126,-127,-125,-124,-122,-123,-124,-125,-128,127,124,123,123,123,125,127,-128,-126,-124,-123,-124,-125,-127,127,125,124,123,123,124,126,127,-127,-126,-124,-124,-125,-127,-128,126,125,123,123,124,124,126,-128,-127,-126,-125,-125,-127,-128,127,126,125,124,125,125,126,127,-128,-127,-126,-126,-127,-127,-128,127,126,126,125,126,126,127,-128,-127,-126,-126,-125,-126,-126,-126,-125,-125,-128,125,120,118,117,117,122,126,-125,-121,-118,-117,-119,-121,-127,126,121,118,117,117,119,124,127,-125,-121,-120,-120,-122,-125,127,124,121,119,119,121,124,127,-126,-123,-122,-121,-122,-124,-127,127,125,123,123,124,126,-127,-125,-125,-126,-128,-128,-128,-128,-128,-127,-126,-127,-127,-128,-128,127,127,127,-128,-128,-128,-127,-127,-127,-127,-128,-128,-128,127,127,127,127,-128,-128,-128,-128,-128,-128,-128,-128,-128,127,127,127,127,-128,-128,-128,-128,-128,-128,-128,-128,-128,127,127,127,127,127,-128,-128,-128,-127,-127,-128,-128,-128,127,127,127,127,127,-128,-128,-128,-127,-127,-127,-128,-128,-128,127,127,127,127,127,-128,-128,-127,-127,-127,-127,-128,-128,-128,-128,-128,-128,-126,-124,-123,-124,127,122,119,117,117,120,125,-127,-122,-119,-117,-119,-123,-127,124,119,116,116,119,123,127,-124,-121,-119,-120,-124,-127,124,120,119,119,121,125,-128,-125,-121,-120,-121,-124,-127,126,124,122,122,125,127,-125,-123,-121,-122,-125,-127,125,123,122,123,125,127}; }
	private static byte[] data6(){ return new byte[] {-125,-123,-121,-121,-124,-126,126,124,121,121,124,126,-127,-125,-122,-122,-124,-126,127,125,122,122,123,125,-128,-126,-124,-123,-125,-126,127,125,122,122,123,125,-128,-126,-124,-123,-125,-126,127,126,123,123,123,125,-128,-127,-125,-124,-125,-126,-128,126,124,124,124,126,-128,-127,-126,-125,-126,-126,-128,127,125,125,125,127,-128,-127,-126,-126,-126,-128,127,127,126,126,127,-128,-128,-126,-126,-126,-126,-126,-126,-126,-126,127,123,120,119,120,123,127,-124,-121,-119,-120,-123,-127,124,119,117,118,122,127,-125,-122,-120,-122,-125,127,122,119,119,121,125,-127,-124,-122,-122,-124,-126,126,124,122,122,124,127,-126,-123,-122,-123,-125,-127,127,125,125,125,126,126,127,-127,-124,-123,-123,-124,-127,127,124,123,124,125,-128,-126,-123,-123,-124,-126,127,124,123,124,125,127,-126,-124,-123,-125,-127,127,124,124,124,125,-128,-127,-125,-125,-126,-128,126,125,124,125,127,-128,-127,-126,-126,-128,127,126,125,125,126,127,-127,-126,-126,-126,-128,127,125,125,125,127,-128,-127,-126,-126,-127,-128,127,126,126,126,127,-128,-126,-126,-126,-128,127,127,126,127,127,-128,-127,-126,-126,-127,-128,-128,-128,-128,-127,-128,127,125,124,124,126,-128,-125,-123,-123,-124,-127,126,123,122,122,125,127,-125,-124,-124,-125,127,125,122,122,123,126,-127,-125,-124,-124,-127,127,125,123,124,125,-128,-126,-124,-124,-126,-128,127,125,125,125,127,-128,-126,-126,-126,-126,-126,-128,127,126,126,126,127,-127,-125,-125,-125,-127,127,126,126,126,127,-128,-126,-125,-126,-127,127,127,126,126,127,-128,-127,-126,-126,-127,-128,126,126,126,127,-128,-127,-127,-127,-127,-128,127,126,126,127,-128,-128,-127,-127,-128,-128,-128,127,127,127,-128,-128,-127,-128,-128,-128,-128,127,127,-128,-128,-128,-127,-128,-128,-128,-128,127,-128,-128,-128,-128,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-128,-128,-128,-128,-128,-128,-128,-127,-128,-128,127,126,126,-128,-128,-127,-126,-126,-127,-128,126,126,126,126,-128,-127,-126,-126,-127,-128,127,126,126,126,-128,-127,-127,-126,-127,-128,-128,126,126,126,-128,-128,-127,-127,-127,-128,-128,127,126,127,127,-128,-128,-127,-127,-125,-125,-127,-128,127,124,124,124,127,-126,-124,-123,-124,-127,127,124,124,124,127,-127,-124,-123,-124,-127,127,125,125,126,127,-127,-125,-125,-126,-128,127,126,125,126,127,-127,-126,-125,-126,-128,127,126,125,126,127,-127,-127,-126,-127,-128,127,126,126,126,127,-128,-127,-127,-127,-128,127,127,127,127,-128,-128,-127,-127,-127,-128,-128,127,127,127,-128,-128,-127,-127,-127,-128,-128,127,127,-128,-128,-128,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-127,-128,-128,-128,127,127,-128,-128,-128,-127,-127,-128,-128,127,127,127,127,-128,-128,-127,-127,-128,-128,-128,127,127,-128,-128,-128,-127,-127,-128,-128,-128,-128,127,-128,-128,-128,-128,-128,-128,-128,-128,127,127,127,127,-128,-128,-127,-126,-125,-126,-128,127,125,124,124,127,-127,-125,-123,-124,-126,-128,126,124,124,126,-128,-125,-124,-124,-125,-127,127,125,125,126,127,-127,-125,-124,-126,-127,127,125,125,126,127,-128,-126,-126,-126,-128,-128,127,125,125,127,-128,-127,-126,-126,-127,-128,127,126,126,127,-128,-128,-127,-127,-127,-128,-128,127,127,127,127,-128,-127,-127,-127,-128,-128,127,127,127,127,-128,-128,-127,-127,-128,-128,-128,127,127,127,-128,-128,-128,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-126,-125,-126,-128,127,125,124,124,126,-128,-126,-124,-123,-124,-127,127,125,124,124,126,-128,-126,-124,-124,-125,-127,-128,125,125,125,126,-128,-127,-125,-125,-126,-128,127,126,125,125,126,-128,-127,-126,-126,-126,-128,127,126,126,126,126,-128,-128,-126,-126,-127,-128,127,127,127,127,127,-128,-128,-127,-126,-127,-128,-128,127,127,127,127,-128,-128,-127,-126,-127,-128,-128,127,127,127,127,-128,-128,-128,-127,-127,-128,-128,-128,127,127,127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-126,-125,-126,-127,-128,126,125,124,125,126,-128,-126,-124,-123,-124,-127,-128,126,125,125,125,127,-128,-126,-125,-124,-125,-127,-128,126,125,125,126,127,-128,-126,-125,-125,-126,-128,-128,126,125,125,126,-128,-128,-127,-126,-126,-127,-128,-128,126,126,126,126,-128,-128,-127,-126,-126,-127,-128,-128,127,126,126,127,-128,-128,-128,-127,-127,-127,-128,-128,127,127,127,127,-128,-128,-128,-127,-127,-127,-128,-128,-128,127,127,-128,-128,-128,-128,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128}; }
	private static byte[] data7(){ return new byte[] {-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-126,-126,-126,-127,-128,127,126,125,125,126,-128,-128,-126,-125,-125,-126,-127,-128,127,126,126,126,127,-128,-127,-126,-125,-126,-126,-128,-128,127,126,126,127,-128,-128,-127,-126,-126,-126,-128,-128,127,127,126,127,127,-128,-128,-127,-127,-126,-127,-128,-128,127,127,127,127,127,-128,-128,-127,-127,-127,-127,-128,-128,127,127,127,127,127,-128,-128,-127,-127,-127,-128,-128,-128,127,127,127,127,-128,-128,-128,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-127,-127,-128,-128,127,127,127,127,-128,-128,-127,-126,-126,-127,-128,-128,-128,127,127,127,-128,-128,-128,-127,-127,-127,-127,-128,-128,-128,127,127,127,-128,-128,-128,-127,-127,-127,-127,-128,-128,-128,-128,127,-128,-128,-128,-128,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-128,-128,127,127,127,127,-128,-128,-127,-126,-126,-127,-127,-128,-128,127,127,127,127,-128,-128,-127,-127,-127,-127,-128,-128,-128,127,127,127,-128,-128,-128,-127,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-127,-127,-128,-128,127,127,127,127,127,-128,-128,-127,-126,-126,-127,-128,-128,127,127,127,127,-128,-128,-127,-127,-127,-127,-128,-128,-128,127,127,127,-128,-128,-127,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-127,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128}; }
	private static byte[] getData(){
		byte[] data = new byte[7696];
		System.arraycopy(data0(), 0, data, 0, 1024);
		System.arraycopy(data1(), 0, data, 1024, 1024);
		System.arraycopy(data2(), 0, data, 2048, 1024);
		System.arraycopy(data3(), 0, data, 3072, 1024);
		System.arraycopy(data4(), 0, data, 4096, 1024);
		System.arraycopy(data5(), 0, data, 5120, 1024);
		System.arraycopy(data6(), 0, data, 6144, 1024);
		System.arraycopy(data7(), 0, data, 7168, 528);
		return data;
	}
	/** Constructs a new AudioClip with the data from boing_x.wav. */
	public boing_x(){
		data = getData();
		format = new AudioFormat(AudioFormat.Encoding.PCM_UNSIGNED, (float)(11025.0), 8, 1, 1, (float)(11025.0), false);
		lineInfo = new DataLine.Info(SourceDataLine.class, format, AudioSystem.NOT_SPECIFIED);
		try{ AudioSystem.getLine(lineInfo); }
		catch(IllegalArgumentException ex){ lineInfo = null; }
		catch(LineUnavailableException e){}
	}
	/** A separate thread for playing boing_x.wav. */
	private class PlayThread extends Thread {
		private byte[] data;
		private AudioFormat format;
		private DataLine.Info lineInfo;
		private SourceDataLine line = null;
		private boolean playing = true;
		public PlayThread(byte[] d, AudioFormat f, DataLine.Info i){ data = d; format = f; lineInfo = i; }
		public void run(){
			try{
				line = (SourceDataLine) AudioSystem.getLine(lineInfo);
				line.open(format, AudioSystem.NOT_SPECIFIED);
				line.start();
				int written = 0;
				int available;
				while(written < data.length && playing){
					available = Math.min(line.available(), data.length - written);
					line.write(data, written, available);
					written += available;
				}
				int frames = data.length / format.getFrameSize();
				while(line.getFramePosition() < frames && playing) Thread.sleep(0);
			}
			catch(InterruptedException ex){ playing = false; }
			catch(LineUnavailableException ex){}
			if(line != null){ line.stop(); line.flush(); line.close(); }
			playing = false;
		}
		public void interrupt(){ playing = false; }
		public boolean isPlaying(){ return playing; }
	}
	/** A separate thread for looping play of boing_x.wav. */
	private class LoopThread extends Thread {
		private boing_x clip;
		private boolean looping = true;
		public LoopThread(boing_x c){ clip = c; }
		public void run(){
			while(looping){
				clip.play();
				while(clip.isPlaying() && looping){
					try{ Thread.sleep(0); }
					catch(InterruptedException ex){ looping = false; break; }
				}
			}
			if(!clip.isLooping()) clip.stop();
		}
		public void interrupt(){ looping = false; }
		public boolean isLooping(){ return looping; }
	}
	/** Plays boing_x.wav from the beginning, even if it is already playing or looping. */
	public void play(){ if(lineInfo == null) return; doPlay(); }
	private synchronized void doPlay(){
		doStopPlay();
		playThread = new PlayThread(data, format, lineInfo);
		playThread.start();
	}
	/** Plays boing_x.wav continuously until stopped. */
	public void loop(){ if(lineInfo == null) return; doLoop(); }
	private synchronized void doLoop(){
		doStopLoop();
		loopThread = new LoopThread(this);
		loopThread.start();
	}
	/** Stops play and looping of boing_x.wav. */
	public void stop(){ if(lineInfo == null) return; doStop(); }
	private synchronized void doStop(){
		doStopPlay();
		doStopLoop();
	}
	private void doStopPlay(){
		if(playThread == null) return;
		if(playThread.isPlaying()) playThread.interrupt();
		playThread = null;
	}
	private void doStopLoop(){
		if(loopThread == null) return;
		if(loopThread.isLooping()) loopThread.interrupt();
		loopThread = null;
	}
	/** Tests if boing_x.wav is currently playing or looping.
	 * @return <tt>true</tt> if playing or looping, <tt>false</tt> otherwise */
	public boolean isPlaying(){ if(lineInfo == null) return false; return doIsPlaying(); }
	private synchronized boolean doIsPlaying(){
		if(loopThread == null && playThread == null) return false;
		else if(loopThread == null) return playThread.isPlaying();
		else if(playThread == null) return loopThread.isLooping();
		else return loopThread.isLooping() && playThread.isPlaying();
	}
	/** Tests if boing_x.wav is currently looping.
	 * @return <tt>true</tt> if looping, <tt>false</tt> otherwise */
	public boolean isLooping(){ if(lineInfo == null) return false; return doIsLooping(); }
	private synchronized boolean doIsLooping(){
		if(loopThread == null) return false;
		else return loopThread.isLooping();
	}
}